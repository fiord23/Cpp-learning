//task_4
// clarray.cpp
// создает класс-массив
#include <iostream>
using namespace std;
///////////////////////////////////////////////////////////
class Array // моделирует обычный массив C++
{
private:
	int* ptr; // указатель на содержимое Array
	int size; // размер Array
public:
	Array(int s) // конструктор с одним аргументом
	{
		size = s; // аргумент - размер Array
		ptr = new int[s]; // выделить память под Array
	}
	Array (Array& arrX)   //constuctor copy
	{
		size = arrX.size;
		ptr = new int[size];
		for(int i =0; i < size; i ++)
		*(ptr+i) = *(arrX.ptr+i);
	}

	Array& operator = (Array& arrX)
	{
		delete[] ptr;
		size = arrX.size;
		ptr = new int[size];
		for (int i = 0; i < size; i++)
			*(ptr + i) = *(arrX.ptr + i);
		return *this;
	}

	~Array() // деструктор
	{
		delete[] ptr;
	}
	int& operator[](int j) // перегружаемая операция
	// списка индексов
	{
		return *(ptr + j);
	}

};
///////////////////////////////////////////////////////////
int main()
{
	const int ASIZE = 10; // размер массива
	Array arr(ASIZE); // создать массив
	for (int j = 0; j < ASIZE; j++) // заполнить его j^2
		arr[j] = j * j;
	for (int j = 0; j < ASIZE; j++) // вывести его содержимое
		cout << arr[j] << ' ';
	cout << endl;
	Array arr2(arr);
	for (int j = 0; j < ASIZE; j++) // вывести его содержимое
		cout << arr2[j] << ' ';
	cout << endl;
	Array arr3(ASIZE);
	arr3 = arr;
	for (int j = 0; j < ASIZE; j++) // вывести его содержимое
		cout << arr3[j] << ' ';
	cout << endl;


	return 0;
}